=================== APUNTES DEL CURSO =======================

===== HERRAMIENTAS =====

    Ubuntu


===== CONCEPTOS DE LAS CLASES =====

¿Que es la terminal?

    - La terminal es un PROGRAMA que recibe las instrucciones que le damos 
      y las TRADUCE en algo que la computadora puede comprender
      y en conjunto con el sistema operativo EJECUTA esas instrucciones y muestra el resultado
    - ENTORNO conocido como INTERFASE de TEXTO
    - La razón para usar este tipo de interfaces y no una gráfica es la EFICIENCIA
    - Otro tema es que a través de la terminal se puede AUTOMATIZAR tareas

    - Incluye además de los comandos algunas utilidades propias:
        ~ Comodines
        ~ Combinación de teclas
        ~ Sustitución de comandos

COMANDOS

    - Un comando consiste en:
         ~ NOMBRE DEL PROGRAMA/COMANDO
         ~ MODIFICADORES
         ~ PARÁMETROS
    - La diferencia entre los parámetros y los modificadores, 
      los modificadores ALTERAN lo que el programa va a hacer
      y los parámetros son INFORMACIÓN ADICIONAL para la ejecución del programa
    - Ejemplo: comando -flag1 -flag2 arg1 arg2


ORGANIZACIÓN DE INFORMACIÓN

El almacenamiento de la información supone responder dos preguntas:

    - ¿Como vamos a lograr que esa información este presente una vez que apagamos la computadora y volvemos a prender?

        ~ El sistema operativo se encarga, con un soporte que es un disco rigido.

    - ¿Como vamos a ORGANIZAR esa información de modo que cuando la necesitemos la tengamos rapidamente accesible?

        ~ Nosotros lo resolvemos, y CONTAMOS con 2 herramientas: ARCHIVOS y DIRECTORIOS

ARCHIVOS

    - Son los que GUARDAN la información
    - Se identifican por: 
        ~ NOMBRE
        ~ UBICACIÓN
    - NOMBRE COMPLETO sería el PATH, por ejemplo: /directorio/subdirectorio/archivos
    - Dentro de un sistema de archivos, no puede haber un archivo con el mismo nombre en la misma ubicación
    - Los NOMBRES, tienen ciertas reglas dependiendo del sistema operativo (como la cantidad de caracteres, los caracteres especiales)

DIRECTORIOS

    - La manera en que ORGANIZAMOS los archivos/información

TIPOS DE ARCHIVOS

    - BINARIOS.-    Esta pensado de tal manera que lo interprete una computadora (imagenes, documentos, música, videos)
    - TEXTO.-       Tambien son binarios pero corresonden con caracteres (se encuentran en configuraciones, codigo fuente, paginas web)
    
        ~ UTILIDADES INTERACTIVAS.- Se usan para trabar con archivos de texto, reaccionan al comando que ejecutas y muestra en pantalla
            - VIM
            - NANO

UTILIDADES BATCH/PROCESAMIENTO POR LOTES

    - Programas que procesan texto y emiten un resultado


PROCESAMIENTO DE DATOS

    - Datos --- Proceso --- Datos procesados/información  (Este es el esquema más clasico, como una maquina de jugos)
    - Esto se conoce como FLUJOS (desde que inicia hasta que sale)
    - En la terminal conoce de 3 flujos
        ~ ENTRADA STANDART
        ~ SALIDA STANDART
        ~ ERROR STANDART

        ~ La ENTRADA standart puede ser el teclado pero la podemos cambiar por un archivo
        ~ La SALIDA standart puede ser el monitor pero lo podemos cambiar por un archivo
    
    PIPES / TUBERIAS

        - Enlazan varios procesos para que no los hagamos por nosotros

FOREGROUND PROCESOS/PRIMER PLANO

    - Son los procesos normales que se ejecutan cuando mandamos un comando
    - Se les llama "primer plano" porque no te devuelven el control hasta que terminan

BACKGROUND PROCESOS/SEGUNDO PLANO

    - Se ejecutaran por detrás, devolviendo el control inmediatamente a pesar de que sean tardados
    - Se utiliza el "&" al final del comando
    - Cuando termina aparece un [1]

    - Ctrl + z cuando ya ejecutaste el proceso y lo quieres mandar a BACKGROUND
    - "fg" para traer de vuelta el proceso que se mando a BACKGROUND

    - IDENTIFICAR PROCESOS EN SEGUNDO PLANO:

        ~ PS
        ~ TOP


===== TIPS & RECORDAR =====

    ---------COMANDOS CLASE 1 (4)----------

    date                        Te trae la fecha actual
    echo + mensaje              Muestra un mensaje en pantalla
    man                         MANUAL, te muestra información sobre otros comandos, como por ejemplo man + date (sale información de date)
    history                     Todos los comandos que se ejecutaron
    
    --------- COMANDOS DIRECTORIOS (17)----------
    ls                          Ver los archivos de un directorio
    ls -l                       Lista los archivos
    ls -a                       Lista los archivos, incluso los ocultos
    ls -lh                      Lista los archivos pero MUESTRA el tamaño en KB y MB  (OJOOOOOOOOOOOO)
    ls -t                       Ordena los archivos por fecha de modificación (descendente)
    ls -S                       Ordena los archivos por tamaño de archivo
    ls -x                       Ordena por nombre y despues por extensión
    pwd                         Print working directory, muestra la ruta actual donde te encuentras
    cd                          Change Directory, para movernos entre directorios
    cd ~                        Me lleva al home
    cd -                        Me lleva al ultimo directorio visitado
    mkdir                       Crear un directorio
    rmdir                       Borra el directorio
    cp + archivo + directorio   Copiar un archivo a la ruta que se le diga (el ultimo parametro indicta el directorio o ruta)
    rm                          Borra el archivo
    mv + archivo + directorio   Mover un archivo
    mv + archivo + archivo      Renombra un archivo

    --------- COMANDOS UTILIDADES INTERACTIVAS VIM (8)----------

    vim                         Abre el editor de VIM
    vim + un_nombre_archivo     Crea un archivo nuevo y lo abre
    vim + un_archivo_ya_creado  Abre ese archivo y se puede editar
    i                           Permite comenzar a escribir
    ESC                         Salir del modo escribir
    :w                          Guarda la información escrita en el archivo
    :q                          Permite salir
    :qa!                        Forza la salida
    :x                          Guardar y salir al mismo tiempo (w + q)

    --------- COMANDOS UTILIDADES INTERACTIVAS NANO (4)----------

    nano                        Abre el editor de NANO
    nano + un_nombre_archivo    Crea un archivo nuevo y lo abre
    nano + un_archivo_ya_creado Abre ese archivo y se puede editar
    CTRL + x                    Salir del programa

    --------- COMANDOS UTILIDADES BATCH PARA VER CONTENIDO (5)----------

    cat                         Puedes ver el contenido COMPLETO de un archivo
    head                        Puedes ver las PRIMERAS 10 lineas del contenido de un archivo (se puede modificar a MAS lineas)
    head -n 5                   Puedes ver las PRIMERAS 5 lineas (ya es pasandole un modificador y un parámetro)
    tail                        Puedes ver las ULTIMAS 10 lineas del contenido de un archivo
    tail -n 5                   Puedes ver las ULTIMAS 5 lienas (el número obviamente puede varias, es un ejemplo el 5)

    --------- COMANDOS UTILIDADES BATCH AVANZADAS (16)----------

    grep                            Búsqueda por expresiones regulares
    grep +palabra +archivo          Busca la palabra dentro del archivo
    grep -i +palabra +archivo       Busca la palabra dentro del archivo SIN IMPORTAR si son mayúsculas o minúsculas
    grep "palabra$" +archivo        Busca las palabras que terminen con "$" gracias al pesitos (NO ME FUNCIONO, tuve que preguntar en los comentarios)
    grep "^palabra" +archivo        Busca las palabras que empiecen con ^
    
    sed                             Tratamiento de flujos (sprit editor) MODIFICAR con expresiones regulares
    sed "s/+palabra_cambiar/+palabra_nueva/g"
                                    Sustituye todas las palabras que se especifican despues de s/ por las que estan despues de palabra_cambiar/ y
                                    la g es para que lo haga de manera GLOBAL en todo el archivo (P.D. NO GUARDA LOS CAMBIOS EN EL ARCHIVO, lo hace en memoria)

    sed -i "s/+palabra_cambiar/+palabra_nueva/g"
                                    Guarda los cambios en el archivo
    
    sed "s/palabra_cambiar/palabra_nueva; s/palabra2_cambiar/palabra2_nueva"    
                                    Se pueden cambiar varias palabras separando por ;
                                
    sed "s/palabra/palabra_nueva/w nuevo_archivo.txt"
                                    El resultado de la sustitución lo guarda en un nuevo archivo

    sed '$d'                        Elimina la ultima linea del archivo (NO GUARDA LOS CAMBIOS)

    awk                             Tratamiento de archivos de texto delimitados (por ejemplo por comas o pipes)
    awk -F +'DELIMITADOR'
        +'{ print $1 }' +archivo    Procesa el archivo, el -F +'DELIMITADOR' nos indica cual va a ser el delimitador por el va a separar
                                    el +'{ print $1}' indica que va a imprimir la primera COLUMNA despues de procesarlo y separarlo
                                    +archivo es el documento que va procesar
    awk -F +'DELIMITADOR'
    +'NR > 0 && $3 > 1 { print $1 }' Igual que el aterior pero valida con NR (Number Rows) sea mayor a 0 y con $3 LA COLUMNA 3 tenga caracteres, TODO para imprimir

    $1 * $2                         TAMBIEN se pueden hacer calculos con las columnas que salen despues de delimitar!! WOW

    $NUMERO                         Es la columna
    NR                              Son todas las filas en el documento

    NOTA: sed no guarda los cambios pero podemos hacer modificaciones durante la lectura de un input de manera muy sencilla con expresiones regulares,
          si luego de esto lo quieres pasar a un archivo lo puedes hacer con este operador: > que veremos en siguientes clases
    NOTA2: Con -i, sed si modifica el archivo


    --------- FLUJOS (5)----------

    comando > archivo               La salida del comando la manda a un archivo, por ejemplo un ls -l > archivo_nuevo.txt 
    comando >> archivo              AGREGA a un archivo que ya existe la información que esta obteniendo del comando
    comando | comando               Genera un flujo entre dos flujos, concatena procesos, por ejemplo:
                                    ls -l > archivo.txt | ls -lah >> archivo.txt

    more                            Para archivos muy grandes va mostrando la información con forme se le aprieta a la barra espaciadora
    wc                              Word Count, cuenta el numero de caracteres en un flujo

    --------- BACKGROUND (10)----------

    comando + &                     Se agrega al final del comando para mandar el proceso a un segundo plano
    Ctrl + z                        Si ya inicio el proceso sin el & y se quiere mandar a background se utiliza esa combinación de teclas
    Ctrl + c                        Detiene el proceso que se esta ejecutando utilizando esa combinación de teclas
    fg                              Cuando se mando a background un proceso y se quiere traer de vuelta a primer plano o foreground
    ps                              Identifica los procesos que están corriendo en segundo plano
    ps ax                           Muestra mas procesos (tambien los eliminados con kill)
    top                             Igual muestra los procesos, en tiempo real meustra como van cambiando los procesos, se pueden matar los procesos
                                    q Sales de la interfaz de top
    kill +numero_proceso            Manda señales al proceso para que se detenga (los procesos envian señales constantemente), el número de proceso
                                    se puede obtener al ejecutar el comando "ps"
    kill -9 +numero_proceso         Corta inmediatamente el proceso, no manda señales, lo corta "abruptamente" 
    killal +nombre_archivo          Es igual que kill, solo cambia por el nombre del archivo el número del proceso
    

    ---------- URL ------------
    - Para instalar Ubuntu primero hay que configurar el PowerShell de Windows siguiendo estos pasos:
      https://platzi.com/clases/1748-terminal/24394-windows-subsystem-for-linux-wsl-como-acceder-a-la-/

    ----------RECORDAR----------

    - Un directorio no se puede borrar si tiene contenido
    - Si te vas al directorio: /mnt/c/Users/<nombre de tu usuario> se pueden usuar los archivos que tengo en windows
    - mv, cp, rm tambien funcionan con directorios

===== RESUMEN CLASES =====

1   -   Instalación de Ubuntu, conceptos de TERMINAL, conceptos de COMANDOS (NOMBRE DEL PROGRAMA, MODIFICADORES, PARÁMETROS), algunos comandos
2   -   La segunda clase viene el enlace con el que instale Ubuntu jajaja deberían ponerlo al principio
3   -   ARCHIVOS, DOCUMENTOS y los comandos para administrar archivos y directorios
4   -   EJERCICIO con directorios, más COMANDOS para listar y ordenar directorios/archivos
5   -   UTILIDADES INTERACTIVAS, Nano y VIM, vimos conceptos, comandos dentro de cada una de las utilidades
6   -   BATCH/PROCESAMIENTO POR LOTES, Cat, Head, Tail, Grep, Sed, Awk  hicimos ejercicios con todos, muy buenos
7   -   LECTURA de información de BACTH, tenia dos modificadores nuevos para sed y para grep
8   -   PROCESAMIENTO de datos, FLUJOS, >, >>, | 
9   -   EJERCICIO de practica con >, >>, vim, ect.
10  -   BACKGROUND, FOREGROUND, &, Ctrl + Z, fg, ps, top, kill, killal todooooo para correr procesos en segundo plano, detenerlos o monitorearlos